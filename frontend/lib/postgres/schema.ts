/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Attachments {
  created_at: Generated<Timestamp | null>;
  created_by: string | null;
  description: string | null;
  filename: string | null;
  filepath: string | null;
  foreign_id: Int8 | null;
  foreign_table: string | null;
  id: Generated<Int8>;
  organization_id: string | null;
  type: string | null;
}

export interface Companies {
  created_at: Generated<Timestamp | null>;
  created_by: string | null;
  description: string | null;
  doing_business_name: string | null;
  id: Generated<Int8>;
  legal_name: string | null;
  next_review_date: Timestamp | null;
  organization_id: string | null;
  recommendation: string | null;
  risk_score: number | null;
  status: string | null;
  website: string | null;
}

export interface Founders {
  address: string | null;
  company_id: Int8 | null;
  created_at: Generated<Timestamp | null>;
  created_by: string | null;
  date_of_birth: string | null;
  email: string | null;
  first_name: string | null;
  id: Generated<Int8>;
  is_pep: boolean | null;
  is_sanctioned: boolean | null;
  last_name: string | null;
  nationality: string | null;
  next_review_date: Timestamp | null;
  organization_id: string | null;
  phone: string | null;
  recommendation: string | null;
  risk_score: number | null;
  status: string | null;
}

export interface DB {
  attachments: Attachments;
  companies: Companies;
  founders: Founders;
}
